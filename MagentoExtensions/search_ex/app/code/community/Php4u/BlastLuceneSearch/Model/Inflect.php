<?php
/**
 * @category   Php4u
 * @package    Php4u_BlastLuceneSearch
 * @author     Marcin Szterling <marcin@php4u.co.uk>
 * @copyright  Php4u Marcin Szterling (c) 2011
 * @license http://php4u.co.uk/licence/
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * Any form of ditribution, sell, transfer forbidden, reverse engineering forbidden - see licence above
 *
 * Code was obfusacted due to previous licence violations
 */
class Php4u_BlastLuceneSearch_Model_Inflect { static $_f5288c13dbc216cffe497f4e1399e8ca = array( '/(quiz)$/i' => "$1zes", '/^(ox)$/i' => "$1en", '/([m|l])ouse$/i' => "$1ice", '/(matr|vert|ind)ix|ex$/i' => "$1ices", '/(x|ch|ss|sh)$/i' => "$1es", '/([^aeiouy]|qu)y$/i' => "$1ies", '/(hive)$/i' => "$1s", '/(?:([^f])fe|([lr])f)$/i' => "$1$2ves", '/(shea|lea|loa|thie)f$/i' => "$1ves", '/sis$/i' => "ses", '/([ti])um$/i' => "$1a", '/(tomat|potat|ech|her|vet)o$/i'=> "$1oes", '/(bu)s$/i' => "$1ses", '/(alias)$/i' => "$1es", '/(octop)us$/i' => "$1i", '/(ax|test)is$/i' => "$1es", '/(us)$/i' => "$1es", '/s$/i' => "s", '/$/' => "s" ); static $_6c2ec31648b4d69c1dcd5c8da81d2c88 = array( '/(quiz)zes$/i' => "$1", '/(matr)ices$/i' => "$1ix", '/(vert|ind)ices$/i' => "$1ex", '/^(ox)en$/i' => "$1", '/(alias)es$/i' => "$1", '/(octop|vir)i$/i' => "$1us", '/(cris|ax|test)es$/i' => "$1is", '/(shoe)s$/i' => "$1", '/(o)es$/i' => "$1", '/(bus)es$/i' => "$1", '/([m|l])ice$/i' => "$1ouse", '/(x|ch|ss|sh)es$/i' => "$1", '/(m)ovies$/i' => "$1ovie", '/(s)eries$/i' => "$1eries", '/([^aeiouy]|qu)ies$/i' => "$1y", '/([lr])ves$/i' => "$1f", '/(tive)s$/i' => "$1", '/(hive)s$/i' => "$1", '/(li|wi|kni)ves$/i' => "$1fe", '/(shea|loa|lea|thie)ves$/i'=> "$1f", '/(^analy)ses$/i' => "$1sis", '/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i' => "$1$2sis", '/([ti])a$/i' => "$1um", '/(n)ews$/i' => "$1ews", '/(h|bl)ouses$/i' => "$1ouse", '/(corpse)s$/i' => "$1", '/(us)es$/i' => "$1", '/s$/i' => "" ); static $_7c81e55cef4c8f60d6fbdc63645798ca = array( 'move' => 'moves', 'foot' => 'feet', 'goose' => 'geese', 'sex' => 'sexes', 'child' => 'children', 'man' => 'men', 'tooth' => 'teeth', 'person' => 'people' ); static $_17f0772336c3a721dfeee1448cf12fa9 = array( 'sheep', 'fish', 'deer', 'series', 'species', 'money', 'rice', 'information', 'equipment' ); public static function pluralize( $_be20e7e1516728985ee552c8fa7cb498 ) { if ( in_array( strtolower( $_be20e7e1516728985ee552c8fa7cb498 ), self::$_17f0772336c3a721dfeee1448cf12fa9 ) ) return $_be20e7e1516728985ee552c8fa7cb498; foreach ( self::$_7c81e55cef4c8f60d6fbdc63645798ca as $_4ef31a43a52f69660f1f72bcd5f82eb5 => $_8a39c2579858c1d426e24347e43911b6 ) { $_4ef31a43a52f69660f1f72bcd5f82eb5 = '/' . $_4ef31a43a52f69660f1f72bcd5f82eb5 . '$/i'; if ( preg_match( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_be20e7e1516728985ee552c8fa7cb498 ) ) return preg_replace( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_8a39c2579858c1d426e24347e43911b6, $_be20e7e1516728985ee552c8fa7cb498); } foreach ( self::$_f5288c13dbc216cffe497f4e1399e8ca as $_4ef31a43a52f69660f1f72bcd5f82eb5 => $_8a39c2579858c1d426e24347e43911b6 ) { if ( preg_match( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_be20e7e1516728985ee552c8fa7cb498 ) ) return preg_replace( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_8a39c2579858c1d426e24347e43911b6, $_be20e7e1516728985ee552c8fa7cb498 ); } return $_be20e7e1516728985ee552c8fa7cb498; } public static function singularize( $_be20e7e1516728985ee552c8fa7cb498 ) { if ( in_array( strtolower( $_be20e7e1516728985ee552c8fa7cb498 ), self::$_17f0772336c3a721dfeee1448cf12fa9 ) ) return $_be20e7e1516728985ee552c8fa7cb498; foreach ( self::$_7c81e55cef4c8f60d6fbdc63645798ca as $_8a39c2579858c1d426e24347e43911b6 => $_4ef31a43a52f69660f1f72bcd5f82eb5 ) { $_4ef31a43a52f69660f1f72bcd5f82eb5 = '/' . $_4ef31a43a52f69660f1f72bcd5f82eb5 . '$/i'; if ( preg_match( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_be20e7e1516728985ee552c8fa7cb498 ) ) return preg_replace( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_8a39c2579858c1d426e24347e43911b6, $_be20e7e1516728985ee552c8fa7cb498); } foreach ( self::$_6c2ec31648b4d69c1dcd5c8da81d2c88 as $_4ef31a43a52f69660f1f72bcd5f82eb5 => $_8a39c2579858c1d426e24347e43911b6 ) { if ( preg_match( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_be20e7e1516728985ee552c8fa7cb498 ) ) return preg_replace( $_4ef31a43a52f69660f1f72bcd5f82eb5, $_8a39c2579858c1d426e24347e43911b6, $_be20e7e1516728985ee552c8fa7cb498 ); } return $_be20e7e1516728985ee552c8fa7cb498; } public static function pluralize_if($_844f28d700f7e790e19d4541fa8f4905, $_be20e7e1516728985ee552c8fa7cb498) { if ($_844f28d700f7e790e19d4541fa8f4905 == 1) return "1 $_be20e7e1516728985ee552c8fa7cb498"; else return $_844f28d700f7e790e19d4541fa8f4905 . " " . self::pluralize($_be20e7e1516728985ee552c8fa7cb498); } }
?>
