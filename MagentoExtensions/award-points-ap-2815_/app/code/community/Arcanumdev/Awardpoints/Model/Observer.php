<?php
 /*
 * Arcanum Dev AwardPoints
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to arcanumdev@wafunotamago.com so we can send you a copy immediately.
 *
 * @category   Magento Sale Extension
 * @package    AwardPoints
 * @copyright  Copyright (c) 2012 Arcanum Dev. Y.K. (http://arcanumdev.wafunotamago.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
 class Arcanumdev_Awardpoints_Model_Observer extends Mage_Core_Model_Abstract {public function recordPointsUponRegistration($observer){if(Mage::getStoreConfig('awardpoints/registration/registration_points',Mage::app()->getStore()->getId()) > 0){$customerId=$observer->getEvent()->getCustomer()->getEntityId();$points=Mage::getStoreConfig('awardpoints/registration/registration_points',Mage::app()->getStore()->getId());$this->recordPoints($points,$customerId, Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_ADMIN, false);}}public function recordPointsForOrderEvent($observer) {$event=$observer->getEvent();$order=$event->getOrder();$quote=$event->getQuote();$order->setQuote($quote);$awardPoints=Mage::helper('awardpoints/data')->getPointsOnOrder($order);if(Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId())){if((int)Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId()) < $awardPoints){$awardPoints=Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId());}}$customerId=$order->getCustomerId();if($awardPoints > 0){$this->recordPoints($awardPoints,$customerId,$order->getIncrementId());}$points_apply=(int) Mage::helper('awardpoints/event')->getCreditPoints();if($points_apply > 0){$this->useCouponPoints($points_apply,$customerId,$order->getIncrementId());}$this->sales_order_success_referral($order);}protected function getMultishippingQuote($order) {$order_shipping_address=Mage::getModel('sales/order_address')->load($order->getShippingAddressId());$customer_shipping_address=$order_shipping_address->getCustomerAddressId();$order_billing_address=Mage::getModel('sales/order_address')->load($order->getBillingAddressId());$customer_billing_address=$order_billing_address->getCustomerAddressId();$quote_tmp=Mage::getModel('sales/quote');$quote=Mage::getModel('sales/quote')->load($order->getQuoteId());foreach($quote->getAddressesCollection() as $my_quote){if($my_quote->getAddressType()=='shipping' && $my_quote->getCustomerAddressId()==$customer_shipping_address){$quote_tmp->setShippingAddress($my_quote);}elseif($my_quote->getAddressType()=='billing' && $my_quote->getCustomerAddressId()==$customer_billing_address) {$quote_tmp->setBillingAddress($my_quote);}}return $quote_tmp;}public function recordPointsForMultiOrderEvent($observer) {$event=$observer->getEvent();$orders=$event->getOrders();$quote=$event->getQuote();if($orders==array()){$this->recordPointsForOrderEvent($observer);return true;}foreach($orders as $order){$order->setQuote($this->getMultishippingQuote($order));$customerId=$order->getCustomerId();$awardPoints=Mage::helper('awardpoints/data')->getPointsOnOrder($order);if(Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId())){if((int)Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId()) < $awardPoints){$awardPoints=Mage::getStoreConfig('awardpoints/default/max_point_collect_order',Mage::app()->getStore()->getId());}}if($awardPoints > 0){$this->recordPoints($awardPoints,$customerId,$order->getIncrementId());}$points_apply=(int) Mage::helper('awardpoints/event')->getCreditPoints();if($points_apply > 0){$this->useCouponPoints($points_apply,$customerId,$order->getIncrementId());}$this->sales_order_success_referral($order);}}public function useCouponPoints($pointsAmt,$customerId,$orderId) {$award_model=Mage::getModel('awardpoints/stats');$test_points=$award_model->checkProcessedOrder($customerId,$orderId, false);if(!$test_points->getId()){$post=array('order_id'=>$orderId, 'customer_id'=>$customerId, 'store_id'=>Mage::app()->getStore()->getId(), 'points_spent'=>$pointsAmt, 'convertion_rate'=>Mage::getStoreConfig('awardpoints/default/points_money',Mage::app()->getStore()->getId()));$award_model->setData($post);$award_model->save();Mage::helper('awardpoints/event')->setCreditPoints(0);}}public function recordPoints($pointsInt,$customerId,$orderId,$no_check=true) {$award_model=Mage::getModel('awardpoints/stats');$test_points=$award_model->checkProcessedOrder($customerId,$orderId, true);if(!$test_points->getId()){$post=array('order_id'=>$orderId, 'customer_id'=>$customerId, 'store_id'=>Mage::app()->getStore()->getId(), 'points_current'=>$pointsInt, 'convertion_rate'=>Mage::getStoreConfig('awardpoints/default/points_money',Mage::app()->getStore()->getId()));$award_model->setData($post);$award_model->save();}}public function sales_order_success_referral($order){if($userId=Mage::getSingleton('awardpoints/session')->getReferralUser()){$referrer=Mage::getModel('customer/customer')->load($userId);$referree_email=$order->getCustomerEmail();$referree_name=$order->getCustomerName();$referralModel=Mage::getModel('awardpoints/referral');if(!$referralModel->isSubscribed($referree_email) && $referrer->getEmail()!=$referree_email) {$referralModel->setAwardpointsReferralParentId($userId) ->setAwardpointsReferralEmail($referree_email) ->setAwardpointsReferralName($referree_name);$referralModel->save();}Mage::getSingleton('awardpoints/session')->setReferralUser(null);Mage::getSingleton('awardpoints/session')->unsetAll();}$awardPoints=Mage::getStoreConfig('awardpoints/registration/referral_points',Mage::app()->getStore()->getId());$awardPointsChild=Mage::getStoreConfig('awardpoints/registration/referral_child_points',Mage::app()->getStore()->getId());if($awardPoints > 0 || $awardPointsChild > 0 && $order->getCustomerEmail()){$referralModel=Mage::getModel('awardpoints/referral');if($referralModel->isSubscribed($order->getCustomerEmail())) {if(!$referralModel->isConfirmed($order->getCustomerEmail())) {$referralModel->loadByEmail($order->getCustomerEmail());$referralModel->setData('awardpoints_referral_status', true);$referralModel->setData('awardpoints_referral_child_id',$order->getCustomerId());$referralModel->save();$parent=Mage::getModel('customer/customer')->load($referralModel->getData('awardpoints_referral_parent_id'));$child= Mage::getModel('customer/customer')->load($referralModel->getData('awardpoints_referral_child_id'));try {if($awardPoints > 0){$award_model=Mage::getModel('awardpoints/stats');$post=array('order_id'=>$order->getIncrementId(), 'customer_id'=>$referralModel->getData('awardpoints_referral_parent_id'),'store_id'=>$order->getStoreId(), 'points_current'=>$awardPoints, 'awardpoints_referral_id'=>$referralModel->getData('awardpoints_referral_id'));$award_model->setData($post);$award_model->save();}if($awardPointsChild > 0){$award_model=Mage::getModel('awardpoints/stats');$post=array('order_id'=>$order->getIncrementId(), 'customer_id'=>$referralModel->getData('awardpoints_referral_child_id'),'store_id'=>$order->getStoreId(), 'points_current'=>$awardPointsChild, 'awardpoints_referral_id'=>$referralModel->getData('awardpoints_referral_id'));$award_model->setData($post);$award_model->save();}} catch (Exception $e) {}$referralModel->sendConfirmation($parent,$child,$parent->getEmail());}}}}public function sales_order_invoice_pay($observer){$awardPoints=Mage::getStoreConfig('awardpoints/registration/referral_points',Mage::app()->getStore()->getId());$awardPointsChild=Mage::getStoreConfig('awardpoints/registration/referral_child_points',Mage::app()->getStore()->getId());if($awardPoints > 0 || $awardPointsChild > 0){$order=$observer->getEvent()->getInvoice()->getOrder();$referralModel=Mage::getModel('awardpoints/referral');if($referralModel->isSubscribed($order->getCustomerEmail())) {if(!$referralModel->isConfirmed($order->getCustomerEmail())) {$referralModel->loadByEmail($order->getCustomerEmail());$referralModel->setData('awardpoints_referral_status', true);$referralModel->setData('awardpoints_referral_child_id',$order->getCustomerId());$referralModel->save();$parent=Mage::getModel('customer/customer')->load($referralModel->getData('awardpoints_referral_parent_id'));$child= Mage::getModel('customer/customer')->load($referralModel->getData('awardpoints_referral_child_id'));$referralModel->sendConfirmation($parent,$child,$parent->getEmail());try {if($awardPoints > 0){$award_model=Mage::getModel('awardpoints/stats');$post=array('order_id'=>$order->getIncrementId(), 'customer_id'=>$referralModel->getData('awardpoints_referral_parent_id'),'store_id'=>$order->getStoreId(), 'points_current'=>$awardPoints, 'awardpoints_referral_id'=>$referralModel->getData('awardpoints_referral_id'));$award_model->setData($post);$award_model->save();}if($awardPointsChild > 0){$award_model=Mage::getModel('awardpoints/stats');$post=array('order_id'=>$order->getIncrementId(), 'customer_id'=>$referralModel->getData('awardpoints_referral_child_id'),'store_id'=>$order->getStoreId(), 'points_current'=>$awardPointsChild, 'awardpoints_referral_id'=>$referralModel->getData('awardpoints_referral_id'));$award_model->setData($post);$award_model->save();}} catch (Exception $e) {}}}}}public function applyDiscount($observer){}}