<?php
 /*
 * Arcanum Dev AwardPoints
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to arcanumdev@wafunotamago.com so we can send you a copy immediately.
 *
 * @category   Magento Sale Extension
 * @package    AwardPoints
 * @copyright  Copyright (c) 2012 Arcanum Dev. Y.K. (http://arcanumdev.wafunotamago.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
 class Arcanumdev_Awardpoints_Model_Account extends Mage_Core_Model_Abstract { protected $customerId = -1; public $storeId = -1; protected $pointsCurrent = NULL; protected $pointsSpent = NULL; protected $awardpointsAccountId = NULL; public function saveCheckedOrder($orderId, $customerId, $storeId, $pointsCurrent, $referral = null, $no_check = false){ $this->customerId = $customerId; $this->storeId = $storeId; $this->pointsCurrent = $pointsCurrent; $this->save($orderId, $no_check, $referral); } public function save($orderId = null, $no_check = false, $referral = null) {if(!$no_check){ $award_model = Mage::getModel('awardpoints/stats') ->getResourceCollection() ->addCustomerFilter($this->customerId) ->addOrderFilter($orderId) ->addStoreFilter($this->storeId); $data['nb_awards'] = $award_model->getSize(); } else { $data['nb_awards'] = 0; } if($data['nb_awards'] == 0){ $award_model = Mage::getModel('awardpoints/stats'); $fields = array(); $fields['customer_id'] = $this->customerId; $fields['store_id'] = $this->storeId; $fields['points_current'] = $this->pointsCurrent; if($referral != null){ $fields['awardpoints_referral_id'] = $referral; } $fields['points_spent'] = $this->pointsSpent; $fields['order_id'] = $orderId; try {if(is_null($this->awardpointsAccountId)) { $fields['date_start'] = date('Y-m-d'); $extra_days = Mage::getStoreConfig('awardpoints/default/points_duration', Mage::app()->getStore()->getId());if($extra_days){ $fields['date_end'] = date("Y-m-d", mktime(date("H"), date("i"), date("s"), date("n"), date("j") + $extra_days, date("Y"))); } } $award_model->setData($fields); $award_model->setId($this->awardpointsAccountId); $award_model->save(); } catch (Exception $e) { $connection->rollBack(); throw $e; } } return $this; } public function load($id, $field=null) {if($field === null) { $field = 'customer_id'; } $this->customerId = $id; $this->storeId = Mage::app()->getStore()->getId(); $award_model = Mage::getModel('awardpoints/stats'); return $this; } public function addPoints($p) { $this->pointsCurrent += $p; } public function subtractPoints($p) { $this->pointsSpent = $p; } public function setAwardpointsAccountId($value){ $this->awardpointsAccountId = $value; } public function setCustomerId($value){ $this->cutomerId = $value; } public function setStoreId($value){ $this->storeId = $value; } public function setPointsCurrent($value){ $this->pointsCurrent = $value; }  public function setPointsSpent($value){ $this->pointsSpent = $value; } public function getPointsCurrent(){ $total = $this->getPointsReceived() - $this->getPointsSpent();if($total > 0){ return $total; } else { return 0; } }   public function getPointsReceived(){ $order_states = array("processing","complete"); $connection = Mage::getSingleton('core/resource') ->getConnection('awardpoints_read');  $select = $connection->select()->from(Mage::getSingleton('core/resource')->getTableName('awardpoints_account'),array(new Zend_Db_Expr('SUM('.Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.points_current) AS nb_credit'),new Zend_Db_Expr('SUM('.Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.points_spent)')));if(version_compare(Mage::getVersion(), '1.4.0', '>=')){ $select->where(" (".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id = '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REVIEW."' or '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_ADMIN."' or ".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id = '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REGISTRATION."' or ".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id in (SELECT increment_id FROM ".Mage::getSingleton('core/resource')->getTableName('sales_order')." AS orders WHERE orders.state IN ('processing','complete')) ) "); } else { $select->where(" (".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id = '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REVIEW."' or '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_ADMIN."' or ".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id = '".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REGISTRATION."' or ".Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id in (SELECT increment_id FROM ".Mage::getSingleton('core/resource')->getTableName('sales_order')." AS orders WHERE orders.entity_id IN ( SELECT order_state.entity_id FROM ".Mage::getSingleton('core/resource')->getTableName('sales_order_varchar')." AS order_state WHERE order_state.value <> 'canceled' AND order_state.value in ('processing','complete')) ) ) ");}$select->where(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id=?',$this->customerId);if(Mage::getStoreConfig('awardpoints/default/store_scope',Mage::app()->getStore()->getId())==1){$select->where('find_in_set(?, '.Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.store_id)',Mage::app()->getStore()->getId());}if(Mage::getStoreConfig('awardpoints/default/points_duration',Mage::app()->getStore()->getId())){$select->where('( date_end >= NOW() or date_end IS NULL)');}$select->group(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id');$data=$connection->fetchRow($select);return $data['nb_credit'];}public function getPointsWaitingValidation(){$connection=Mage::getSingleton('core/resource') ->getConnection('awardpoints_read');$select=$connection->select() ->from(Mage::getSingleton('core/resource')->getTableName('awardpoints_account'), array('SUM(points_current) AS nb_credit')) ->where(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id=?',$this->customerId);if(Mage::getStoreConfig('awardpoints/default/store_scope',Mage::app()->getStore()->getId())==1){ $select->where('find_in_set(?, '.Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.store_id)',Mage::app()->getStore()->getId());}if(Mage::getStoreConfig('awardpoints/default/points_duration',Mage::app()->getStore()->getId())){$select->where('( date_end >= NOW() OR date_end IS NULL)');}$select->group(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id');$data=$connection->fetchRow($select);return $data['nb_credit']-$this->getPointsReceived();}public function getPointsSpent(){ $order_states=array("processing","complete","new");$orders = Mage::getModel('sales/order')->getCollection() ->addAttributeToSelect('*') ->addAttributeToFilter('customer_id',$this->customerId) ->addAttributeToFilter('state', array('in' => $order_states)) ->joinAttribute('status', 'order/status', 'entity_id', null, 'left');$orders_array=array();$orders_array[]="'".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_ADMIN."'";$orders_array[]="'".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REGISTRATION."'";$orders_array[]="'".Arcanumdev_Awardpoints_Model_Stats::TYPE_POINTS_REVIEW."'";foreach ($orders as $order){$orders_array[] = "'".$order->getIncrementId()."'";}$connection=Mage::getSingleton('core/resource') ->getConnection('awardpoints_read');$select=$connection->select() ->from(Mage::getSingleton('core/resource')->getTableName('awardpoints_account'), array('SUM(points_spent) AS nb_credit')) ->where(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id=?', $this->customerId) ->where(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').".order_id IN (".implode(',',$orders_array).')');if(Mage::getStoreConfig('awardpoints/default/store_scope',Mage::app()->getStore()->getId())==1){$select->where('find_in_set(?, '.Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.store_id)',Mage::app()->getStore()->getId());}$select->group(Mage::getSingleton('core/resource')->getTableName('awardpoints_account').'.customer_id'); $data=$connection->fetchRow($select);return $data['nb_credit'];}}