<?php
 /*
 * Arcanum Dev AwardPoints
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to arcanumdev@wafunotamago.com so we can send you a copy immediately.
 *
 * @category   Magento Sale Extension
 * @package    AwardPoints
 * @copyright  Copyright (c) 2012 Arcanum Dev. Y.K. (http://arcanumdev.wafunotamago.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
 class Arcanumdev_Awardpoints_Block_Coupon extends Mage_Checkout_Block_Cart_Abstract{public function getAutoUse(){return Mage::getStoreConfig('awardpoints/default/auto_use',Mage::app()->getStore()->getId());}public function getPointsOnOrder() {return Mage::helper('awardpoints/data')->getPointsOnOrder();}public function getCustomerId() {return Mage::getModel('customer/session')->getCustomerId();}public function getPointsCurrentlyUsed() {return Mage::helper('awardpoints/event')->getCreditPoints();}public function canUseCouponCode(){return Mage::getStoreConfig('awardpoints/default/coupon_codes',Mage::app()->getStore()->getId());}public function getCustomerPoints() {$customerId=Mage::getModel('customer/session')->getCustomerId();$award_model=Mage::getModel('awardpoints/stats');$store_id=Mage::app()->getStore()->getId();return $award_model->getPointsCurrent($customerId,$store_id);}public function getPointsInfo() {$customerId=Mage::getModel('customer/session')->getCustomerId();$award_model=Mage::getModel('awardpoints/stats');$store_id=Mage::app()->getStore()->getId();$customerPoints=$award_model->getPointsCurrent($customerId,$store_id);$points_money=Mage::getStoreConfig('awardpoints/default/points_money',Mage::app()->getStore()->getId());$step=Mage::getStoreConfig('awardpoints/default/step_value',Mage::app()->getStore()->getId());$step_apply=Mage::getStoreConfig('awardpoints/default/step_apply',Mage::app()->getStore()->getId());$full_use=Mage::getStoreConfig('awardpoints/default/full_use',Mage::app()->getStore()->getId());$order_details=$this->getQuote()->getBaseSubtotal();$order_details=$order_details - Mage::getStoreConfig('awardpoints/default/min_subtotal',Mage::app()->getStore()->getId());$cart_amount=Mage::helper('awardpoints/data')->processMathValue($order_details);$max_use=min(Mage::helper('awardpoints/data')->convertMoneyToPoints($cart_amount),$customerPoints);return array('customer_points'=>$customerPoints,'points_money'=>$points_money,'step'=>$step,'step_apply'=>$step_apply,'full_use'=>$full_use,'max_use'=>$max_use);}public function pointsToAddOptions($customer_points,$step){$toHtml='';$creditToBeAdded=0;$points_money=Mage::getStoreConfig('awardpoints/default/points_money',Mage::app()->getStore()->getId());$max_points_tobe_used=Mage::getStoreConfig('awardpoints/default/max_point_used_order',Mage::app()->getStore()->getId());$order_details=$this->getQuote()->getBaseSubtotal();$order_details=$order_details - Mage::getStoreConfig('awardpoints/default/min_subtotal',Mage::app()->getStore()->getId());$cart_amount=Mage::helper('awardpoints/data')->convertMoneyToPoints($order_details);$customer_points_origin=$customer_points;$test="";while ($customer_points > 0){$creditToBeAdded += $step;$customer_points-=$step;if($creditToBeAdded > $customer_points_origin || $cart_amount < $creditToBeAdded || ($max_points_tobe_used != 0 && $max_points_tobe_used < $creditToBeAdded)){break;}$toHtml .= '<option value="'. $creditToBeAdded .'">'. $this->__("%d points",$creditToBeAdded) .'</option>';}return $toHtml;}}