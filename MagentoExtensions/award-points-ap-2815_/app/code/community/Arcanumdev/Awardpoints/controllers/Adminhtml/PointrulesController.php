<?php
 /*
 * Arcanum Dev AwardPoints
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to arcanumdev@wafunotamago.com so we can send you a copy immediately.
 *
 * @category   Magento Sale Extension
 * @package    AwardPoints
 * @copyright  Copyright (c) 2012 Arcanum Dev. Y.K. (http://arcanumdev.wafunotamago.com)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
 class Arcanumdev_Awardpoints_Adminhtml_PointrulesController extends Mage_Adminhtml_Controller_action{protected function _initAction(){$this->loadLayout()->_setActiveMenu('awardpoints/pointrules')->_addBreadcrumb(Mage::helper('awardpoints')->__('Point Rules'), Mage::helper('awardpoints')->__('Point Rules'));return $this;}public function indexAction(){$this->_initAction()->_addContent($this->getLayout()->createBlock('awardpoints/adminhtml_pointrules'))->renderLayout();}public function newAction(){$this->_forward('edit');}public function deleteAction(){if($id=$this->getRequest()->getParam('id')){try{$model=Mage::getModel('awardpoints/pointrules');$model->load($id);$model->delete();Mage::getSingleton('adminhtml/session')->addSuccess(Mage::helper('awardpoints')->__('Rule was successfully deleted'));$this->_redirect('*/*/');return;}catch (Exception $e){Mage::getSingleton('adminhtml/session')->addError($e->getMessage());$this->_redirect('*/*/edit', array('id' => $this->getRequest()->getParam('id')));return;}}Mage::getSingleton('adminhtml/session')->addError(Mage::helper('awardpoints')->__('Unable to find a page to delete'));$this->_redirect('*/*/');}public function editAction(){$id=$this->getRequest()->getParam('id');$model=Mage::getModel('awardpoints/pointrules');if($id){$model->load($id);if(! $model->getRuleId()){Mage::getSingleton('adminhtml/session')->addError(Mage::helper('awardpoints')->__('This rule no longer exists'));$this->_redirect('*/*');return;}}$data=Mage::getSingleton('adminhtml/session')->getPageData(true);if(!empty($data)){$model->addData($data);}$model->getConditions()->setJsFormObject('pointrules_conditions_fieldset');$model->setData('segments_cut', explode(';', $model->getSegmentsCut()));$model->setData('segments_paste', explode(';', $model->getSegmentsPaste()));Mage::register('pointrules_data', $model);$this->loadLayout();$this->_setActiveMenu('awardpoints');$block=$this->getLayout()->createBlock('awardpoints/adminhtml_pointrules_edit')->setData('action', $this->getUrl('*/awardpoints_pointrules/save'));$this->getLayout()->getBlock('head')->setCanLoadExtJs(true)->setCanLoadRulesJs(true);$this->_addContent($block)->_addLeft($this->getLayout()->createBlock('awardpoints/adminhtml_pointrules_edit_tabs'))->renderLayout();}public function saveAction(){if($this->getRequest()->getPost()){try{$model=Mage::getModel('awardpoints/pointrules');$data=$this->getRequest()->getPost();if(method_exists('Mage_Core_Controller_Varien_Action','_filterDates')){$data=$this->_filterDates($data, array('from_date', 'to_date'));} else{if($data['from_date'] != null){$date=Mage::app()->getLocale()->date($data['from_date'], Zend_Date::DATE_SHORT, null, false);$time=$date->getTimestamp();$data['from_date']=Mage::getModel('core/date')->gmtDate(null, $time);}if($data['to_date'] != null){$date=Mage::app()->getLocale()->date($data['to_date'], Zend_Date::DATE_SHORT, null, false);$time=$date->getTimestamp();$data['to_date']=Mage::getModel('core/date')->gmtDate(null, $time);}}$id=$this->getRequest()->getParam('id');if($id){$model->load($id);if($id != $model->getId()){Mage::throwException(Mage::helper('awardpoints')->__('Wrong rule specified.'));}}if(method_exists('Mage_Rule_Model_Rule','validateData')){$validateResult=$model->validateData(new Varien_Object($data));} else{$validateResult=$model->validateVarienData(new Varien_Object($data));}if($validateResult !== true){foreach($validateResult as $errorMessage){$this->_getSession()->addError($errorMessage);}$this->_getSession()->setPageData($data);$this->_redirect('*/*/edit', array('id'=>$model->getId()));return;}$data['conditions']=$data['rule']['conditions'];unset($data['rule']);$model->loadPost($data);Mage::getSingleton('adminhtml/session')->setPageData($model->getData());$model->save();Mage::getSingleton('adminhtml/session')->addSuccess(Mage::helper('awardpoints')->__('Rule was successfully saved'));Mage::getSingleton('adminhtml/session')->setPageData(false);$this->_redirect('*/*/');return;} catch (Exception $e){Mage::getSingleton('adminhtml/session')->addError($e->getMessage());Mage::getSingleton('adminhtml/session')->setPageData($data);$this->_redirect('*/*/edit', array('id' => $this->getRequest()->getParam('rule_id')));return;}}$this->_redirect('*/*/');}public function newConditionHtmlAction(){$id=$this->getRequest()->getParam('id');$typeArr=explode('|', str_replace('-', '/', $this->getRequest()->getParam('type')));$type=$typeArr[0];$model=Mage::getModel($type)->setId($id)->setType($type)->setRule(Mage::getModel('awardpoints/pointrules'))->setPrefix('conditions');if(!empty($typeArr[1])){$model->setAttribute($typeArr[1]);}if($model instanceof Mage_Rule_Model_Condition_Abstract){$model->setJsFormObject($this->getRequest()->getParam('form'));$html=$model->asHtmlRecursive();} else{$html='';}$this->getResponse()->setBody($html);}}